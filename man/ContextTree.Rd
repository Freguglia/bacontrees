% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ContextTree.R
\name{ContextTree}
\alias{ContextTree}
\title{Context Tree R6 Class}
\description{
Context Tree R6 Class

Context Tree R6 Class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{nodes}}{List of nodes from a context tree (both active and non-active).}

\item{\code{data}}{A list of observed sequences of data.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ContextTree-new}{\code{ContextTree$new()}}
\item \href{#method-ContextTree-root}{\code{ContextTree$root()}}
\item \href{#method-ContextTree-validate}{\code{ContextTree$validate()}}
\item \href{#method-ContextTree-getActiveNodes}{\code{ContextTree$getActiveNodes()}}
\item \href{#method-ContextTree-activateRoot}{\code{ContextTree$activateRoot()}}
\item \href{#method-ContextTree-activateMaximal}{\code{ContextTree$activateMaximal()}}
\item \href{#method-ContextTree-getLeaves}{\code{ContextTree$getLeaves()}}
\item \href{#method-ContextTree-nodeExists}{\code{ContextTree$nodeExists()}}
\item \href{#method-ContextTree-getParentNode}{\code{ContextTree$getParentNode()}}
\item \href{#method-ContextTree-getSiblingNodes}{\code{ContextTree$getSiblingNodes()}}
\item \href{#method-ContextTree-growActive}{\code{ContextTree$growActive()}}
\item \href{#method-ContextTree-getGrowableNodes}{\code{ContextTree$getGrowableNodes()}}
\item \href{#method-ContextTree-setData}{\code{ContextTree$setData()}}
\item \href{#method-ContextTree-print}{\code{ContextTree$print()}}
\item \href{#method-ContextTree-clone}{\code{ContextTree$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-new"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$new(alphabet = NULL, maximalDepth = 3, active = "root")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{alphabet}}{Either an object of class Alphabet or a character
vector with the symbols for the alphabet considered in the context tree.}

\item{\code{maximalDepth}}{Depth of the maximal tree considered.}

\item{\code{active}}{Either "root" or "maximal" to indicate which nodes
should be initialized as active.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-root"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-root}{}}}
\subsection{Method \code{root()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$root()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns the Context Tree root node.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-validate"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-validate}{}}}
\subsection{Method \code{validate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$validate()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Returns a logical value incating whether the Context Tree is
valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-getActiveNodes"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-getActiveNodes}{}}}
\subsection{Method \code{getActiveNodes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$getActiveNodes(idx = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{idx}}{A logical value. If \code{TRUE}, the function will return
the index (path) of the node as a string. If \code{FALSE}, returns
a list of nodes.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns a list of active nodes (leaf nodes of the active tree).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-activateRoot"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-activateRoot}{}}}
\subsection{Method \code{activateRoot()}}{
Sets the active tree to be the one containing only the root node.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$activateRoot()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-activateMaximal"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-activateMaximal}{}}}
\subsection{Method \code{activateMaximal()}}{
Activates the leaf nodes of the maximal Context Tree.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$activateMaximal()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-getLeaves"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-getLeaves}{}}}
\subsection{Method \code{getLeaves()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$getLeaves(idx = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{idx}}{A logical value. If \code{TRUE}, the function will return
the index (path) of the node as a string. If \code{FALSE}, returns
a list of nodes.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns the leaf nodes of the maximal Context Tree (regardless of
the current active tree).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-nodeExists"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-nodeExists}{}}}
\subsection{Method \code{nodeExists()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$nodeExists(path)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{A string representing the path of a node.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
TRUE if a node with a given path exists in the Context Tree.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-getParentNode"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-getParentNode}{}}}
\subsection{Method \code{getParentNode()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$getParentNode(path, idx = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{A string representing the path of a node.}

\item{\code{idx}}{A logical value. If \code{TRUE}, the function will return
the index (path) of the node as a string. If \code{FALSE}, returns
a list of nodes.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns the parent node of the node in a given path.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-getSiblingNodes"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-getSiblingNodes}{}}}
\subsection{Method \code{getSiblingNodes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$getSiblingNodes(path, idx = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{A string representing the path of a node.}

\item{\code{idx}}{A logical value. If \code{TRUE}, the function will return
the index (path) of the node as a string. If \code{FALSE}, returns
a list of nodes.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns the sibling nodes of the node in a given path.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-growActive"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-growActive}{}}}
\subsection{Method \code{growActive()}}{
Replaces the node of a given path by its children in the active tree.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$growActive(path)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{A string representing the path of a node.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-getGrowableNodes"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-getGrowableNodes}{}}}
\subsection{Method \code{getGrowableNodes()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$getGrowableNodes(idx = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{idx}}{A logical value. If \code{TRUE}, the function will return
the index (path) of the node as a string. If \code{FALSE}, returns
a list of nodes.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Returns a list of active nodes that have
children that can be activated.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-setData"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-setData}{}}}
\subsection{Method \code{setData()}}{
Sets data for the Context Tree by setting the counts of occurrences
of each symbol of the alphabet within each context (node) of the tree.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$setData(Sequence)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{Sequence}}{A "Sequence" object to be set as data for the context tree.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-print"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-print}{}}}
\subsection{Method \code{print()}}{
Prints the current active Context Tree and the counts for
each context.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ContextTree-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ContextTree-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ContextTree$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
